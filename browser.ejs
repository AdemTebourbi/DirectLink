<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Browser</title>
  <style>
    /* Existing styles */
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f1f1f1;
    }

    #bg-video {
      position: fixed;
      top: 0;
      left: 0;
      min-width: 100%;
      min-height: 100%;
      z-index: -1;
      /* Ensure the video is behind other content */
    }

    .container {
      display: flex;
      flex-wrap: wrap;
    }

    .item {
      box-sizing: border-box;
      width: 200px;
      padding: 10px;
      margin: 10px;
      background-color: rgba(0, 0, 0, 0.1);
      border-radius: 5px;
      text-align: center;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .item:hover {
      background-color: rgba(255, 255, 255, 0.5);
    }

    .item img {
      max-width: 100%;
      max-height: 100px;
    }

    .file-name {
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      max-width: 100%;
      color: white;
      /* Ensure the text doesn't break out of the container */
    }

    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: url('/image3.jpg');
      /* Background image from image3.jpg */
      background-size: cover;
      background-position: center;
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    .overlay-content {
      text-align: center;
      color: #fff;
      padding: 40px;
      /* Increase padding for larger size */
    }

    .loader-container {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100%;
    }


    .loader {
      border: 10px solid #f3f3f3;
      /* Light grey */
      border-top: 10px solid #3498db;
      /* Blue */
      border-radius: 50%;
      width: 100px;
      height: 100px;
      animation: spin 2s linear infinite;
      /* Loader animation */
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  </style>
</head>

<body>
  <video autoplay muted loop id="bg-video">
    <source src="/wallpaper1.mp4" type="video/mp4">
    Your browser does not support HTML5 video.
  </video>
  <div class="loading-overlay" id="loadingOverlay">
    <div class="overlay-content">
      <div class="loader-container">
        <div class="loader"></div>
      </div>
    </div>
  </div>




  <div class="container" id="fileBrowser">
    <!-- Content will be dynamically generated here -->
    <% directoryContent.forEach(item=> { %>
      <div class="item <%= item.type %>"
        onclick="<%= item.type === 'file' ? `downloadFile('${item.name}')` : `openFolder('${item.name}')` %>">
        <img
          src="<%= item.type === 'folder' ? 'folder-icon.png' : extensionToImagePath[item.extension] || 'file-icon.png' %>"
          alt="<%= item.name %>">
        <div class="file-name">
          <%= item.name %>
        </div>
      </div>
      <% }) %>


        <script>
          function downloadFile(fileName) {
            // Redirect to the download link for the file
            window.location.href = `/download?fileName=${fileName}&traveledPath=<%= traveledPath %>&sharingId=<%= sharingId %>`;
          }

          function openFolder(folderName) {
            // Redirect to the explore-sharing page for the selected folder
            window.location.href = `/?traveledPath=<%= traveledPath ? traveledPath + '/' : '' %>${folderName}&sharingId=<%= sharingId %>`;
          }
        </script>

        <script>
          async function verifyPass(id, password) {
            try {
              const response = await fetch('/check-password', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id, password }),
              });

              const data = await response.json();

              if (data.success) {
                return true;
              } else {
                return false;
              }
            } catch (error) {
              console.error('Error checking password:', error.message);
              return false;
            }
          }
          const delay = (delayInms) => {
            return new Promise(resolve => setTimeout(resolve, delayInms));
          };
          async function getAccess() {
            const sharingId = '<%= sharingId %>';
            const storedPassword = sessionStorage.getItem('password');

            if (!(await verifyPass(sharingId, storedPassword))) {
              // Show loading overlay while setting up
              document.getElementById('loadingOverlay').style.display = 'flex';
              await delay(2200);
              const enteredPassword = prompt('Please enter the password:');

              // Set the password and hide loading overlay if it's the first time opening
              if (await verifyPass(sharingId, enteredPassword)) {
                sessionStorage.setItem('password', enteredPassword);
                document.getElementById('loadingOverlay').style.display = 'none';
              } else {
                window.alert('Incorrect Password!');
                await getAccess();
              }
            }
            document.getElementById('loadingOverlay').style.display = 'none';
          }

          // Call the function to initiate the access check
          getAccess();
        </script>
  </div>
</body>

</html>